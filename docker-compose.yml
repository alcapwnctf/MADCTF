version: '2.4'

networks:
  game:
    ipam: 
      config:
        - subnet: 172.19.10.0/26

services:

  gevent_flag_submitter:
    build:
      context: .
      dockerfile: ./docker_config/gevent_flag_submitter/Dockerfile
    env_file:
      - ./environ/postgres.env
      - ./environ/redis.env
      - ./environ/rabbitmq.env
    restart: on-failure
    networks: 
      - game

  nginx:
    build:
      context: .
      dockerfile: ./docker_config/nginx/Dockerfile
    restart: on-failure
    depends_on:
        - flower
        - webapi
    networks: 
      - game

  webapi:
    build:
      context: ./
      dockerfile: ./docker_config/webapi/Dockerfile
    env_file:
      - ./environ/postgres.env
      - ./environ/redis.env
      - ./environ/rabbitmq.env
    restart: on-failure
    tty: true
    networks: 
      - gameserver
    depends_on:
      - postgres
      - rabbitmq
      - redis

  redis:
    image: redis:5.0.7-alpine
    command: ["sh", "-c", "redis-server --requirepass $$REDIS_PASSWORD"]
    restart: on-failure
    sysctls:
      net.core.somaxconn: 1024
    env_file:
      - ./environ/redis.env
    networks: 
      - gameserver
    depends_on:
      - postgres
    
  postgres:
    image: pomomondreganto/forcad_postgres:latest
    volumes:
      - ./data/postgres:/var/lib/postgresql/data/
    env_file:
      - ./environ/postgres.env
    restart: on-failure
    networks: 
      - gameserver
    
  flower:
    build:
      context: .
      dockerfile: ./docker_config/celery/Dockerfile
    environment:
      - CELERY_CONTAINER_TYPE=flower
    env_file:
      - ./environ/postgres.env
      - ./environ/redis.env
      - ./environ/celery.env
      - ./environ/rabbitmq.env
    restart: on-failure
    networks: 
      - gameserver
    depends_on:
      - postgres
      - rabbitmq
      - redis
      - celery

  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:3.8.2-alpine
    restart: on-failure
    env_file:
      - ./environ/rabbitmq.env
    networks: 
      - gameserver
    depends_on:
      - postgres
  
  initializer:
    build:
      context: .
      dockerfile: ./docker_config/initializer/Dockerfile
    env_file:
      - ./environ/postgres.env
      - ./environ/redis.env
      - ./environ/rabbitmq.env
    restart: on-failure
    networks: 
      - gameserver
    depends_on:
      - postgres
      - rabbitmq
      - redis

  celery:
    build:
      context: .
      dockerfile: ./docker_config/celery/Dockerfile
    environment:
      - CELERY_CONTAINER_TYPE=worker
    env_file:
      - ./environ/postgres.env
      - ./environ/redis.env
      - ./environ/rabbitmq.env
    restart: on-failure
    networks: 
      - game
    depends_on:
      - postgres
      - rabbitmq
      - redis

  celerybeat:
    build:
      context: .
      dockerfile: ./docker_config/celery/Dockerfile
    environment:
      - CELERY_CONTAINER_TYPE=beat
    env_file:
      - ./environ/postgres.env
      - ./environ/redis.env
      - ./environ/rabbitmq.env
    restart: on-failure
    networks: 
      - gameserver
    depends_on:
      - postgres
      - rabbitmq
      - redis

  db:
    image: mariadb:10.4
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
    volumes:
      - ./data/mysql:/var/lib/mysql
    container_name: teamdb
    networks:
      game:
        ipv4_address: 172.19.10.10
    command: [mysqld, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --wait_timeout=28800, --log-warnings=0]

  team1:
    image: madctf_challenge
    build:
      context: ./challenge
    networks: 
      game:
        ipv4_address: 172.19.10.11
    depends_on:
      - db
    mem_limit: 768m
    mem_reservation: 50m
    env_file: 
      - ./environ/team1.env

  team2:
    image: madctf_challenge
    networks: 
      game:
        ipv4_address: 172.19.10.12
    depends_on:
      - db
      - team1
    mem_limit: 200m
    mem_reservation: 50m
    env_file: 
      - ./environ/team2.env

  team3:
    image: madctf_challenge
    networks: 
      game:
        ipv4_address: 172.19.10.13
    depends_on:
      - db
      - team1
    mem_limit: 200m
    mem_reservation: 50m
    env_file: 
      - ./environ/team3.env